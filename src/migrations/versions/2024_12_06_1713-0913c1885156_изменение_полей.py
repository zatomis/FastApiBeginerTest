"""Изменение полей

Revision ID: 0913c1885156
Revises: 993bd6116283
Create Date: 2024-12-06 17:13:51.784312

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "0913c1885156"
down_revision: Union[str, None] = "993bd6116283"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, "hotels", ["id"])
    op.alter_column(
        "rooms",
        "id",
        existing_type=sa.INTEGER(),
        type_=sa.SmallInteger(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.create_unique_constraint(None, "rooms", ["id"])
    op.alter_column(
        "users",
        "id",
        existing_type=sa.INTEGER(),
        type_=sa.SmallInteger(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.drop_constraint("users_password_key", "users", type_="unique")
    op.create_unique_constraint(None, "users", ["email"])
    op.create_unique_constraint(None, "users", ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "users", type_="unique")
    op.drop_constraint(None, "users", type_="unique")
    op.create_unique_constraint("users_password_key", "users", ["password"])
    op.alter_column(
        "users",
        "id",
        existing_type=sa.SmallInteger(),
        type_=sa.INTEGER(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.drop_constraint(None, "rooms", type_="unique")
    op.alter_column(
        "rooms",
        "id",
        existing_type=sa.SmallInteger(),
        type_=sa.INTEGER(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.drop_constraint(None, "hotels", type_="unique")
    # ### end Alembic commands ###
